import socket

server = socket.socket(socket.AF_INET,         # задамем семейство протоколов 'Интернет' (INET)
                          socket.SOCK_STREAM,  # задаем тип передачи данных 'потоковый' (TCP)
                          proto=0)             # выбираем протокол 'по умолчанию' для TCP, т.е. IP
print(type(server))

print(server.fileno()) # file descriptor

# на серверной машине может быть несколько сетевых адаптеров,
#  нам необходимо привязать созданный сокет к одному из них:
server.bind(('127.0.0.1', 456)) # чтобы привязать сразу ко всем, можно использовать ''

#  явно перевести сокет в состояние ожидания подключения, 
# сообщив об этом операционной системе:
server.listen(10) # 10 - это размер очереди входящих подключений, т.н. backlog

# сокет принимает входящие подключения, но сервер(программа) еще не обрабатывает их
# СОЕДИНЕНИЕ УСТАНАВЛИВАЕТСЯ -> УСТАНОВЛЕНО -> СОЕДИНЕНИЕ ЗАКРЫВАЕТСЯ
# Как только количество установленных соединений в очереди достигнет значения backlog, 
# новые соединения приниматься не будут

# получаем соединение из этой очереди, accept - блокирующий
while True:
    # Бесконечно обрабатываем входящие подключения
    client_sock, client_addr = server.accept()
    print('Connected by', client_addr)

    while True:
        # Пока клиент не отключился, читаем передаваемые
        # им данные и отправляем их обратно    
        data = client_sock.recv(1024)
        send = (b'Hi from server')
        if not data:
            # Клиент отключился        
            break
        client_sock.sendall(send)
        print('Client Say', data)

    client_sock.close()


